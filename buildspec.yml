version: 0.2
env:
  variables:
    BASE_VERSION: "0.1.0"
    DOTCOVER_VERSION: "2019.3.2"
    JUNITTESTLOGGER_VERSION: "1.1.0"
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

      - echo Installing .net core sdk 3.1 on Ubuntu 18.04
      - wget -q https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
      - dpkg -i packages-microsoft-prod.deb
      - add-apt-repository universe
      - apt-get update
      - apt-get install apt-transport-https
      - apt-get update
      - apt-get install -y dotnet-sdk-3.1
  build:
    commands:
      - echo Build started...
      - COMMIT_SHORT_HASH=$(printf "%.11s" $COMMIT_ID)
      - cd src
      - chmod +x ./Host/nuget-setup.sh
      - ./Host/nuget-setup.sh
      - dotnet add UnitTests package JUnitTestLogger --version $JUNITTESTLOGGER_VERSION
      - dotnet add UnitTests package JetBrains.dotCover.DotNetCliTool --version $DOTCOVER_VERSION
      - dotnet build

      - echo Running unit tests...
      - dotnet test --no-build --logger "junit;LogFilePath=TestResults/TestResults.xml" --verbosity:normal

      - echo Generating coverage report...
      - ~/.nuget/packages/jetbrains.dotcover.dotnetclitool/$DOTCOVER_VERSION/tools/dotCover.sh dotnet --output=UnitTests/TestResults/CoverageReport_${REPOSITORY_NAME}_${BASE_VERSION}_${CODEBUILD_BUILD_NUMBER}_${COMMIT_SHORT_HASH}/report.html --reportType=HTML -- test

      - echo Building the Docker image...
      - cd Host
      - ECR_REPOSITORY=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPOSITORY_NAME
      - IMAGE_TAG="${REPOSITORY_NAME}_${BRANCH_NAME}_${BASE_VERSION}_${CODEBUILD_BUILD_NUMBER}_${COMMIT_SHORT_HASH}"
      - docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:latest .

      - echo Publishing the Docker image...
      - docker push $ECR_REPOSITORY:$IMAGE_TAG
      - docker push $ECR_REPOSITORY:latest

      - echo Done
reports:
  TestReports:
    files: # publisihing test results
      - ./src/UnitTests/TestResults/TestResults.xml
artifacts:
  files: # publishing coverage report to S3
    - ./src/UnitTests/TestResults/**/*
